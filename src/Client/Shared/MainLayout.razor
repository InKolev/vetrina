@using Vetrina.Client.Services

@inherits LayoutComponentBase

@inject ApplicationState applicationState;

<MudThemeProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" Color="applicationState.MainThemeColor" Fixed="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="ToggleDrawer" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Brightness6" Color="Color.Inherit" Edge="Edge.End" OnClick="applicationState.SwitchColor" />
        <MudSpacer />
        <div class="@applicationState.ShakeCartClass">
            <MudBadge Content="applicationState.ShoppingList.Count" Color="Color.Secondary" Overlap="true" Origin="Origin.TopRight">
                <MudIconButton Link="/shopping-list" Target="_self" Icon="@Icons.Material.Filled.FoodBank" Color="Color.Inherit" Edge="Edge.End" />
            </MudBadge>
        </div>
    </MudAppBar>
    <MudDrawer @bind-Open="DrawerOpen" ClipMode="DrawerClipMode.Never" Elevation="2">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6" Align="Align.Center" Style="letter-spacing: 2.5px;">
                VETRINA
            </MudText>
        </MudDrawerHeader>
        <NavMenu></NavMenu>
    </MudDrawer>
    <MudMainContent>
        @Body
        <MudScrollToTop TopOffset="100" ScrollBehavior="ScrollBehavior.Smooth">
            <MudFab Size="Size.Large" Color="this.applicationState.MainThemeColor" Icon="@Icons.Filled.ArrowCircleUp" />
        </MudScrollToTop>
    </MudMainContent>
</MudLayout>

@code {
    private bool drawerOpen = false;

    public bool DrawerOpen
    {
        get => this.drawerOpen;
        set { this.drawerOpen = value; }
    }

    protected override void OnInitialized()
    {
        this.applicationState.ShoppingListChanged += StateHasChanged;
    }

    public void Dispose()
    {
        this.applicationState.ShoppingListChanged -= StateHasChanged;
    }

    public void ToggleDrawer()
    {
        this.DrawerOpen = !this.DrawerOpen;
    }
}
